import { Button, VerticalBox , HorizontalBox, GridBox, GroupBox, ListView, ComboBox, LineEdit} from "std-widgets.slint";

export struct WmInfo {
    name: string,
    command: string,
}

export global SystemInfos {
    in-out property <[string]> wms : ["sway", "kde"];
    in-out property <[string]> wm-command : ["sway", "kde"];
}

export component AppWindow inherits Window {
    no-frame: true;
    property <int> wmindex : 1;
    Image {
        x: 0; y: 0;
        height: 100%; width: 100%;
        // https://commons.wikimedia.org/wiki/File:Berlin_potsdamer_platz.jpg Belappetit, CC BY-SA 3.0
        source: @image-url("/home/quack/Pictures/vtuber/ina4k.jpg");
        image-fit: cover;
    }

    callback Shutdown();
    callback Login(string, string, string);
    callback SetMessage(string, string);
    SetMessage(type, messagein) => {
        debug(messagein);
        if(type == "Warning") {
            messageline.color = Colors.yellow;
        } else {
            messageline.color = Colors.black;
        }
        messageline.text = messagein
    }

    VerticalBox {
        alignment: center;
        HorizontalBox {
            Rectangle {}
            //Text {
            //    text: "Username:";
            //    font-size: 15px;
            //    font-weight: 0;
            //    color: blueviolet;
            //    max-width: 80px;
            //    min-width: 80px;
            //
            //}
            user := LineEdit {
                max-width: 400px;
                placeholder-text: "Username";
            }
            Rectangle {}
        }
        HorizontalBox {
            Rectangle {}
            //Text {
            //    text: "Password:";
            //    font-size: 15px;
            //    font-weight: 0;
            //    color: blueviolet;
            //    max-width: 80px;
            //    min-width: 80px;
            //}
            edit := LineEdit {
                input-type: password;
                max-width: 400px;
                placeholder-text: "Password";
            }
            //Button {
            //    text: "s/h";
            //    max-width: 30px;
            //    clicked => {
            //        if (edit.input-type == InputType.password) {
            //            edit.input-type = InputType.text;
            //        } else {
            //            edit.input-type = InputType.password;
            //        }
            //    }
            //}
            Rectangle {}
        }
        HorizontalBox {
            Rectangle {}
            //Text {
            //    text: "Desktop:";
            //    font-size: 15px;
            //    font-weight: 0;
            //    color: blueviolet;
            //    max-width: 80px;
            //    min-width: 80px;
            //}
            wm := ComboBox {
                max-width: 339px;
                current-value: SystemInfos.wms[0];
                model: SystemInfos.wms;
                current-index <=> wmindex;
                selected => {
                    commend.text = SystemInfos.wm-command[wm.current-index];
                }
            }
            //Button {
            //    text: "Edit";
            //    max-width: 30px;
            //    clicked => {
            //        if (edit.input-type == InputType.password) {
            //            edit.input-type = InputType.text;
            //        } else {
            //            edit.input-type = InputType.password;
            //        }
            //    }
            //}
            Rectangle {}
        }
        HorizontalBox {
            Rectangle {}
            commend := LineEdit {
                text: SystemInfos.wm-command[0];
                min-width: 120px;
            }
            Rectangle {}
        }
        Rectangle {}
        Rectangle {}
        HorizontalBox {
            Rectangle {}
            Button {
                text: "shutdown";
                max-width: 30px;
                clicked => {
                    Shutdown();
                }
            }
            Button {
                text: "Login";
                max-width: 30px;
                clicked => {
                    Login(user.text,edit.text, commend.text);
                }
            }
            Rectangle {}
        }
        Rectangle {
            height: 40px;
        }
        messageline := Text {
            horizontal-alignment: center;
        }
    }
}
